# def max1(a, b):
#     if a > b:
#         return a
#     return b


# –§–∏–±–æ–Ω–∞—á–∏

# def fib(n):
#     if n in [1,2]:
#         return 1
#     return fib(n-1) + fib(n-2)

# list_1 = []
# for i in range(1,10):
#     list_1.append(fib(i))
#     print(list_1)


#     –î–≤–∞ –¥—Ä—É–≥–∞ —Ä–µ—à–∏–ª–∏ –ø–æ–∏–≥—Ä–∞—Ç—å –≤ –∏–≥—Ä—É: –æ–¥–∏–Ω –∑–∞–≥–∞–¥—ã–≤–∞–µ—Ç —á–∏—Å–ª–æ –æ—Ç 1 –¥–æ 100, –¥—Ä—É–≥–æ–π
# –¥–æ–ª–∂–µ–Ω –æ—Ç–≥–∞–¥–∞—Ç—å. –°–æ–≥–ª–∞—Å–∏—Ç–µ—Å—å, —á—Ç–æ –º—ã –º–æ–∂–µ–º –ø–µ—Ä–µ–±–∏—Ä–∞—Ç—å —ç—Ç–∏ –∑–Ω–∞—á–µ–Ω–∏—è –≤ —Å–ª—É—á–∞–π–Ω–æ–º
# –ø–æ—Ä—è–¥–∫–µ, –Ω–∞–ø—Ä–∏–º–µ—Ä: 32, 27, 60, 73‚Ä¶ –î–∞, –º—ã –º–æ–∂–µ–º —É–≥–∞–¥–∞—Ç—å –≤ –∫–∞–∫–æ–π-—Ç–æ –º–æ–º–µ–Ω—Ç, –Ω–æ —á—Ç–æ
# –µ—Å–ª–∏ –º—ã –æ–±—Ä–∞—Ç–∏—Ç—å—Å—è –∫ —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏ ‚Äú—Ä–∞–∑–¥–µ–ª—è–π –∏ –≤–ª–∞—Å—Ç–≤—É–π‚Äù –û–±–æ–∑–Ω–∞—á–∏–º –¥—Ä—É–∑–µ–π, –¥—Ä—É–≥_1
# —ç—Ç–æ –ò–≤–∞–Ω, –∫–æ—Ç–æ—Ä—ã–π –∑–∞–≥–∞–¥–∞–ª —á–∏—Å–ª–æ, –¥—Ä—É–≥_2 —ç—Ç–æ –ü–µ—Ç—Ä, –∫–æ—Ç–æ—Ä—ã–π –æ—Ç–≥–∞–¥—ã–≤–∞–µ—Ç. –ò—Ç–∞–∫
# –Ω–∞—á–Ω–µ–º:
# –ò–≤–∞–Ω –∑–∞–≥–∞–¥–∞–ª —á–∏—Å–ª–æ 77.
# –ü–µ—Ç—Ä: –ß–∏—Å–ª–æ –±–æ–ª—å—à–µ 50? –ò–≤–∞–Ω: –î–∞.
# –ü–µ—Ç—Ä: –ß–∏—Å–ª–æ –±–æ–ª—å—à–µ 75? –ò–≤–∞–Ω: –î–∞.
# –ü–µ—Ç—Ä: –ß–∏—Å–ª–æ –±–æ–ª—å—à–µ 87? –ò–≤–∞–Ω: –ù–µ—Ç.
# –ü–µ—Ç—Ä: –ß–∏—Å–ª–æ –±–æ–ª—å—à–µ 81? –ò–≤–∞–Ω: –ù–µ—Ç.
# –ü–µ—Ç—Ä: –ß–∏—Å–ª–æ –±–æ–ª—å—à–µ 78? –ò–≤–∞–Ω: –ù–µ—Ç.
# –ü–µ—Ç—Ä: –ß–∏—Å–ª–æ –±–æ–ª—å—à–µ 76? –ò–≤–∞–Ω: –î–∞


# def quick_sort(array):
#     if len(array) <= 1:
#         return array
#     else:
#         pivot = array[0]
#         less = [i for i in array[1:] if i <= pivot]
#         greater = [i for i in array[1:] if i > pivot]
#         return quick_sort(less) + [pivot] + quick_sort(greater)
    
# print(quick_sort([14,5,6,4,3,7,9]))


# –ê–Ω–æ–Ω–∏–º–Ω—ã–µ, lambda-—Ñ—É–Ω–∫—Ü–∏–∏

# def f(x):
#     return x ** 2
# print(f(2))


# –ö–∞–∫–æ–π —Ç–∏–ø –¥–∞–Ω–Ω—ã—Ö —É —Ñ—É–Ω–∫—Ü–∏–∏? ‚Üí <class ‚Äúfunction‚Äù>
# –£ —Ñ—É–Ω–∫—Ü–∏–∏ –µ—Å—Ç—å —Ç–∏–ø, –∑–Ω–∞—á–∏—Ç –º—ã –º–æ–∂–µ–º —Å–æ–∑–¥–∞—Ç—å –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é —Ç–∏–ø–∞ —Ñ—É–Ω–∫—Ü–∏–∏ –∏
# –ø–æ–ª–æ–∂–∏—Ç—å –≤ —ç—Ç—É –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –∫–∞–∫—É—é-—Ç–æ –¥—Ä—É–≥—É—é —Ñ—É–Ω–∫—Ü–∏—é.

# def f(x):
#    return x ** 2
# g = f


# g ‚Äî —ç—Ç–æ –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è, –∫–æ—Ç–æ—Ä–∞—è —Ö—Ä–∞–Ω–∏—Ç –≤ —Å–µ–±–µ —Å—Å—ã–ª–∫—É –Ω–∞ —Ñ—É–Ω–∫—Ü–∏—é.

# def f(x):
#     return x ** 2
# g = f
# print(f(4)) # 16
# print(g(4)) # 16


# –ï—Å—Ç—å –Ω–µ–∫–∞—è —Ñ—É–Ω–∫—Ü–∏—è calc, –∫–æ—Ç–æ—Ä–∞—è –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –≤ –∫–∞—á–µ—Å—Ç–≤–µ –∞—Ä–≥—É–º–µ–Ω—Ç–∞ —á–∏—Å–ª–æ, –∞ –≤
# –∫–∞—á–µ—Å—Ç–≤–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —ç—Ç–æ —á–∏—Å–ª–æ + 10:

# def calc1(x)
#    return x + 10
# print(calc1(10)) # 20


# –î–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –≤–∑—è—Ç—å —Ñ—É–Ω–∫—Ü–∏—é calc, –∫–æ—Ç–æ—Ä–∞—è –±—É–¥–µ—Ç –≤ –∫–∞—á–µ—Å—Ç–≤–µ –∞—Ä–≥—É–º–µ–Ω—Ç–∞
# –ø—Ä–∏–Ω–∏–º–∞—Ç—å –æ–ø–µ—Ä–∞—Ü–∏—é –∏ —á—Ç–æ-—Ç–æ –≤—ã–¥–∞–≤–∞—Ç—å.

# def calc2(x):
#    return x * 10
# def math(op, x)
#    print(op, x)
# math(calc2, 10) # 100


# op ‚Äî –æ–ø–µ—Ä–∞—Ü–∏—è, –≤–æ—Å–ø—Ä–∏–Ω–∏–º–∞–µ–º –µ—ë –∫–∞–∫ –æ—Ç–¥–µ–ª—å–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é. –í –ø—Ä–∏–º–µ—Ä–µ —ç—Ç–æ –ª–∏–±–æ
# —Å—É–º–º–∞ (sum), –ª–∏–±–æ –ø–µ—Ä–µ–º–Ω–æ–∂–µ–Ω–∏–µ(mylt):

# def sum(x, y):
#    return x + y

# def mylt(x, y):
#     return x * y


# –ú–æ–∂–Ω–æ —Å–æ–∑–¥–∞—Ç—å –ø—Å–µ–≤–¥–æ–Ω–∏–º –¥–ª—è —Ñ—É–Ω–∫—Ü–∏–∏ —Å–ª–æ–∂–µ–Ω–∏—è (f).

# def sum(x, y):
#    return x + y
# f = sum
# calc(f, 4, 5) # 9


# –í Python –µ—Å—Ç—å –º–µ—Ö–∞–Ω–∏–∑–º, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–∑–≤–æ–ª—è–µ—Ç –ø—Ä–µ–≤—Ä–∞—Ç–∏—Ç—å –ø–æ–¥–æ–±–Ω—ã–π –≤—ã–∑–æ–≤ –≤–æ —á—Ç–æ-—Ç–æ
# –±–æ–ª–µ–µ –∫—Ä–∞—Å–∏–≤–æ–µ ‚Äî lambda.


# def sum(x, y):
#    return x + y
# # ‚áî (—Ä–∞–≤–Ω–æ—Å–∏–ª—å–Ω–æ)
# sum = lambda x, y: x + y


# –¢–µ–ø–µ—Ä—å, —á—Ç–æ–±—ã –≤—ã–∑–≤–∞—Ç—å —Ñ—É–Ω–∫—Ü–∏—é —Å—É–º–º—ã, –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–æ—Å—Ç–æ –≤—ã–∑–≤–∞—Ç—å sum.
# –¢–∞–∫–∂–µ –º–æ–∂–Ω–æ –ø—Ä–æ–ø—É—Å—Ç–∏—Ç—å —à–∞–≥ —Å–æ–∑–¥–∞–Ω–∏—è –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π sum –∏ —Å—Ä–∞–∑—É –≤—ã–∑–≤–∞—Ç—å lambda

# calc(lambda x, y: x + y, 4, 5) # 9



# . –í —Å–ø–∏—Å–∫–µ —Ö—Ä–∞–Ω—è—Ç—Å—è —á–∏—Å–ª–∞. –ù—É–∂–Ω–æ –≤—ã–±—Ä–∞—Ç—å —Ç–æ–ª—å–∫–æ —á—ë—Ç–Ω—ã–µ —á–∏—Å–ª–∞ –∏ —Å–æ—Å—Ç–∞–≤–∏—Ç—å
# —Å–ø–∏—Å–æ–∫ –ø–∞—Ä (—á–∏—Å–ª–æ; –∫–≤–∞–¥—Ä–∞—Ç —á–∏—Å–ª–∞).
# –ü—Ä–∏–º–µ—Ä: 1 2 3 5 8 15 23 38
# –ü–æ–ª—É—á–∏—Ç—å: [(2, 4), (8, 64), (38, 1444)]
# –†–µ—à–µ–Ω–∏–µ:


# data = [1, 2, 3, 5, 8, 15, 23, 38]
# out = []
# for i in data :
#     if i % 2 == 0:
#         out.append((i, i ** 2))
# print(out)


# –ö–∞–∫ –º–æ–∂–Ω–æ —Å–¥–µ–ª–∞—Ç—å —ç—Ç–æ—Ç –∫–æ–¥ –ª—É—á—à–µ, –∏—Å–ø–æ–ª—å–∑—É—è lambda?

# def select(f, col):
#     return [f(x) for x in col]
# def where(f, col):
#     return [x for x in col if f(x)]
# data = [1, 2, 3, 5, 8, 15, 23, 38]
# res = select(int, data)
# print(res)
# res = where(lambda x: x % 2 ==0, res)
# print(res)
# res = list (select(lambda x: (x, x**2), res))




# üí° –§—É–Ω–∫—Ü–∏—è map() –ø—Ä–∏–º–µ–Ω—è–µ—Ç —É–∫–∞–∑–∞–Ω–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é –∫ –∫–∞–∂–¥–æ–º—É —ç–ª–µ–º–µ–Ω—Ç—É
# –∏—Ç–µ—Ä–∏—Ä—É–µ–º–æ–≥–æ –æ–±—ä–µ–∫—Ç–∞ –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∏—Ç–µ—Ä–∞—Ç–æ—Ä —Å –Ω–æ–≤—ã–º–∏ –æ–±—ä–µ–∫—Ç–∞–º–∏.
# –ï—Å—Ç—å –Ω–∞–±–æ—Ä –¥–∞–Ω–Ω—ã—Ö. –§—É–Ω–∫—Ü–∏—è map –ø–æ–∑–≤–æ–ª—è–µ—Ç —É–≤–µ–ª–∏—á–∏—Ç—å –∫–∞–∂–¥—ã–π –æ–±—ä–µ–∫—Ç –Ω–∞ 10.

# list_1 = [x for x in range (1,20)]

# list_1 = list(map(lambda x: x + 10, list_1 ))
# print(list_1)


# –ó–∞–¥–∞—á–∞: C –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –≤–≤–æ–¥–∏—Ç—Å—è –Ω–µ–∫–∏–π –Ω–∞–±–æ—Ä —á–∏—Å–µ–ª, –≤ –∫–∞—á–µ—Å—Ç–≤–µ —Ä–∞–∑–¥–µ–ª–∏—Ç–µ–ª—è
# –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –ø—Ä–æ–±–µ–ª. –≠—Ç–æ—Ç –Ω–∞–±–æ—Ä —á–∏—Å–µ–ª –±—É–¥–µ—Ç —Å—á–∏—Ç–∞–Ω –≤ –∫–∞—á–µ—Å—Ç–≤–µ —Å—Ç—Ä–æ–∫–∏. –ö–∞–∫
# –ø—Ä–µ–≤—Ä–∞—Ç–∏—Ç—å list —Å—Ç—Ä–æ–∫ –≤ list —á–∏—Å–µ–ª?
# 1. –ú–∞–ª–µ–Ω—å–∫–æ–µ –æ—Ç—Å—Ç—É–ø–ª–µ–Ω–∏–µ, —Ñ—É–Ω–∫—Ü–∏—è —Å—Ç—Ä–æ–∫–∞.split() - —É–±–∏—Ä–∞–µ—Ç –≤—Å–µ –ø—Ä–æ–±–µ–ª—ã –∏ —Å–æ–∑–¥–∞–µ–º
# —Å–ø–∏—Å–æ–∫ –∏–∑ –∑–Ω–∞—á–µ–Ω–∏–π —Å—Ç—Ä–æ–∫–∏, –ø—Ä–∏–º–µ—Ä:

# data = '1 2 3 5 8 15 23 38'.split()
# print(data) # ['1', '2', '3', '5', '8', '15', '23', '38']


# –¢–µ–ø–µ—Ä—å –≤–µ—Ä–Ω–µ–º—Å—è –∫ –∑–∞–¥–∞—á–µ. –° –ø–æ–º–æ—â—å—é —Ñ—É–Ω–∫—Ü–∏–∏ map():
# data = list(map(int,input().split()))

# –†–µ–∑—É–ª—å—Ç–∞—Ç —Ä–∞–±–æ—Ç—ã map() ‚Äî —ç—Ç–æ –∏—Ç–µ—Ä–∞—Ç–æ—Ä. –ü–æ –∏—Ç–µ—Ä–∞—Ç–æ—Ä—É –º–æ–∂–Ω–æ –ø—Ä–æ–±–µ–∂–∞—Ç—å—Å—è —Ç–æ–ª—å–∫–æ
# –æ–¥–∏–Ω —Ä–∞–∑. –ß—Ç–æ–±—ã —Ä–∞–±–æ—Ç–∞—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ —Ä–∞–∑ —Å –æ–¥–Ω–∏–º–∏ –¥–∞–Ω–Ω—ã–º–∏, –Ω—É–∂–Ω–æ —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å
# –¥–∞–Ω–Ω—ã–µ (–Ω–∞–ø—Ä–∏–º–µ—Ä, –≤ –≤–∏–¥–µ —Å–ø–∏—Å–∫–∞)

# 2. –¢–µ–ø–µ—Ä—å –≤–µ—Ä–Ω–µ–º—Å—è –∫ –∑–∞–¥–∞—á–µ. –° –ø–æ–º–æ—â—å—é —Ñ—É–Ω–∫—Ü–∏–∏ map():
# data = list(map(int,input().split()))
# 


# –†–µ–∑—É–ª—å—Ç–∞—Ç —Ä–∞–±–æ—Ç—ã map() ‚Äî —ç—Ç–æ –∏—Ç–µ—Ä–∞—Ç–æ—Ä. –ü–æ –∏—Ç–µ—Ä–∞—Ç–æ—Ä—É –º–æ–∂–Ω–æ –ø—Ä–æ–±–µ–∂–∞—Ç—å—Å—è —Ç–æ–ª—å–∫–æ
# –æ–¥–∏–Ω —Ä–∞–∑. –ß—Ç–æ–±—ã —Ä–∞–±–æ—Ç–∞—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ —Ä–∞–∑ —Å –æ–¥–Ω–∏–º–∏ –¥–∞–Ω–Ω—ã–º–∏, –Ω—É–∂–Ω–æ —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å
# –¥–∞–Ω–Ω—ã–µ (–Ω–∞–ø—Ä–∏–º–µ—Ä, –≤ –≤–∏–¥–µ —Å–ø–∏—Å–∫–∞).
# –ö–∞–∫ –º–æ–∂–Ω–æ —Å–¥–µ–ª–∞—Ç—å —ç—Ç–æ—Ç –∫–æ–¥ –ª—É—á—à–µ, –∏—Å–ø–æ–ª—å–∑—É—è map()?
# üí° map() –ø–æ–∑–≤–æ–ª–∏—Ç –∏–∑–±–∞–≤–∏—Ç—å—Å—è –æ—Ç —Ñ—É–Ω–∫—Ü–∏–∏ select.

# def where(f, col):
#     return [x for x in col if f(x)]

# data = '1 2 3 5 8 15 23 38'.split()

# res = map(int, data)

# res = where(lambda x: x % 2 == 0, res)

# res = list(map(lambda x: (x, x ** 2), res))
# print(res)

# –§—É–Ω–∫—Ü–∏—è filter
# üí° –§—É–Ω–∫—Ü–∏—è filter() –ø—Ä–∏–º–µ–Ω—è–µ—Ç —É–∫–∞–∑–∞–Ω–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é –∫ –∫–∞–∂–¥–æ–º—É —ç–ª–µ–º–µ–Ω—Ç—É
# –∏—Ç–µ—Ä–∏—Ä—É–µ–º–æ–≥–æ –æ–±—ä–µ–∫—Ç–∞ –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∏—Ç–µ—Ä–∞—Ç–æ—Ä —Å —Ç–µ–º–∏ –æ–±—ä–µ–∫—Ç–∞–º–∏, –¥–ª—è –∫–æ—Ç–æ—Ä—ã—Ö
# —Ñ—É–Ω–∫—Ü–∏—è –≤–µ—Ä–Ω—É–ª–∞ True.


# data = [x for x in range(10)]
# res = list(filter(lambda x: x % 2 == 0, data))
# print(res) # [0, 2, 4, 6, 8]



# –ö–∞–∫ –≤ –¥–∞–Ω–Ω–æ–º —Å–ª—É—á–∞–µ —Ä–∞–±–æ—Ç–∞–µ—Ç —Ñ—É–Ω–∫—Ü–∏—è filter()? –í—Å–µ –¥–∞–Ω–Ω—ã–µ, –∫–æ—Ç–æ—Ä—ã–µ –Ω–∞—Ö–æ–¥—è—Ç—Å—è
# –≤–Ω—É—Ç—Ä–∏ –ø—Ä–æ—Ö–æ–¥—è—Ç —á–µ—Ä–µ–∑ —Ñ—É–Ω–∫—Ü–∏—é, –∫–æ—Ç–æ—Ä–∞—è —É–∫–∞–∑–∞–Ω–∞ —Å–ª–µ–¥—É—é—â–∏–º –æ–±—Ä–∞–∑–æ–º:
# lambda x: x % 2 == 0
# –¢–æ –µ—Å—Ç—å –¥–µ–ª–∞–µ—Ç –ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —Ç–µ —á–∏—Å–ª–∞, –∫–æ—Ç–æ—Ä—ã–µ –ø—Ä–∏ –¥–µ–ª–µ–Ω–∏–∏ –Ω–∞ 2 –¥–∞—é—Ç –≤ –æ—Å—Ç–∞—Ç–∫–µ 0.
# –¢–µ–º —Å–∞–º—ã–º –º—ã –∏—â–µ–º —Ç–æ–ª—å–∫–æ —á–µ—Ç–Ω—ã–µ —á–∏—Å–ª–∞. –î–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–≤ –Ω–∞—à–∏
# –∏—Ç–æ–≥–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –≤ —Å–ø–∏—Å–æ–∫, —Å –ø–æ–º–æ—â—å—é —Ñ—É–Ω–∫—Ü–∏–∏ list(), –º—ã —Å –í–∞–º–∏ –º–æ–∂–µ–º –Ω–∞–±–ª—é–¥–∞—Ç—å
# —Ç–∞–∫–æ–π –∫—Ä–∞—Å–∏–≤—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç 


# –ö–∞–∫ –º–æ–∂–Ω–æ —Å–¥–µ–ª–∞—Ç—å —ç—Ç–æ—Ç –∫–æ–¥ –ª—É—á—à–µ, –∏—Å–ø–æ–ª—å–∑—É—è filter()?
# üí° filter() –ø–æ–∑–≤–æ–ª–∏—Ç –∏–∑–±–∞–≤–∏—Ç—å—Å—è –æ—Ç —Ñ—É–Ω–∫—Ü–∏–∏ where, –∫–æ—Ç–æ—Ä—É—é –º—ã –ø–∏—Å–∞–ª–∏ —Ä–∞–Ω–µ–µ


# data = '1 2 3 5 8 15 23 38'.split()
# res = map(int, data)
# res = filter(lambda x: x % 2 == 0, res)
# res = list(map(lambda x: (x, x ** 2), res))
# print(res)

# –§—É–Ω–∫—Ü–∏—è zip
# üí° –§—É–Ω–∫—Ü–∏—è zip() –ø—Ä–∏–º–µ–Ω—è–µ—Ç—Å—è –∫ –Ω–∞–±–æ—Ä—É –∏—Ç–µ—Ä–∏—Ä—É–µ–º—ã—Ö –æ–±—ä–µ–∫—Ç–æ–≤ –∏
# –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∏—Ç–µ—Ä–∞—Ç–æ—Ä —Å –∫–æ—Ä—Ç–µ–∂–∞–º–∏ –∏–∑ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –≤—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö

# –ü—Ä–∏–º–µ—Ä:

# users = ['user1', 'user2', 'user3', 'user4', 'user5']
# ids = [4, 5, 9, 14, 7]
# data = list(zip(users, ids))
# print(data) # [('user1', 4), ('user2', 5), ('user3', 9), ('user4', 14),
# ('user5', 7)]

# –§—É–Ω–∫—Ü–∏—è zip () –ø—Ä–æ–±–µ–≥–∞–µ—Ç –ø–æ –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–º—É –≤—Ö–æ–¥—è—â–µ–º—É –Ω–∞–±–æ—Ä—É:

# users = ['user1', 'user2', 'user3', 'user4', 'user5']
# ids = [4, 5, 9, 14, 7]
# salary = [111, 222, 333]
# data = list(zip(users, ids, salary))
# print(data) # [('user1', 4, 111), ('user2', 5, 222), ('user3', 333)]


# –§—É–Ω–∫—Ü–∏—è enumerate
# üí° –§—É–Ω–∫—Ü–∏—è enumerate() –ø—Ä–∏–º–µ–Ω—è–µ—Ç—Å—è –∫ –∏—Ç–µ—Ä–∏—Ä—É–µ–º–æ–º—É –æ–±—ä–µ–∫—Ç—É –∏
# –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –Ω–æ–≤—ã–π –∏—Ç–µ—Ä–∞—Ç–æ—Ä —Å –∫–æ—Ä—Ç–µ–∂–∞–º–∏ –∏–∑ –∏–Ω–¥–µ–∫—Å–∞ –∏ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –≤—Ö–æ–¥–Ω—ã—Ö
# –¥–∞–Ω–Ω—ã—Ö.

# –§—É–Ω–∫—Ü–∏—è enumerate() –ø–æ–∑–≤–æ–ª—è–µ—Ç –ø—Ä–æ–Ω—É–º–µ—Ä–æ–≤–∞—Ç—å –Ω–∞–±–æ—Ä –¥–∞–Ω–Ω—ã—Ö.

# users = ['user1', 'user2', 'user3']
# data = list(enumerate(users)
# print(data) # [(0, 'user1'), (1, 'user2'), (2, 'user3))


# –§–∞–π–ª—ã

# –§–∞–π–ª—ã –≤ —Ç–µ–∫—Å—Ç–æ–≤–æ–º —Ñ–æ—Ä–º–∞—Ç–µ –∏—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è –¥–ª—è:
# ‚óè –•—Ä–∞–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö
# ‚óè –ü–µ—Ä–µ–¥–∞—á–∏ –¥–∞–Ω–Ω—ã—Ö –≤ –∫–ª–∏–µ–Ω—Ç-—Å–µ—Ä–≤–µ—Ä–Ω—ã—Ö –ø—Ä–æ–µ–∫—Ç–∞—Ö
# ‚óè –•—Ä–∞–Ω–µ–Ω–∏—è –∫–æ–Ω—Ñ–∏–≥–æ–≤
# ‚óè –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è –¥–µ–π—Å—Ç–≤–∏–π

# –ß—Ç–æ –Ω—É–∂–Ω–æ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å —Ñ–∞–π–ª–∞–º–∏:
# 1. –ó–∞–≤–µ—Å—Ç–∏ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é, –∫–æ—Ç–æ—Ä–∞—è –±—É–¥–µ—Ç —Å–≤—è–∑–∞–Ω–∞ —Å —ç—Ç–∏–º —Ç–µ–∫—Å—Ç–æ–≤—ã–º —Ñ–∞–π–ª–æ–º.
# 2. –£–∫–∞–∑–∞—Ç—å –ø—É—Ç—å –∫ —Ñ–∞–π–ª—É.
# 3. –£–∫–∞–∑–∞—Ç—å, –≤ –∫–∞–∫–æ–º —Ä–µ–∂–∏–º–µ –º—ã –±—É–¥–µ–º —Ä–∞–±–æ—Ç–∞—Ç—å —Å —Ñ–∞–π–ª–æ–º.

# –í–∞—Ä–∏–∞–Ω—Ç—ã —Ä–µ–∂–∏–º–∞ (–º–æ–¥):

# 1. a ‚Äì –æ—Ç–∫—Ä—ã—Ç–∏–µ –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö.
# ‚óã –ü–æ–∑–≤–æ–ª—è–µ—Ç –¥–æ–ø–∏—Å—ã–≤–∞—Ç—å —á—Ç–æ-—Ç–æ –≤ –∏–º–µ—é—â–∏–π—Å—è —Ñ–∞–π–ª.
# ‚óã –ï—Å–ª–∏ –≤—ã –ø–æ–ø—Ä–æ–±—É–µ—Ç–µ –¥–æ–ø–∏—Å–∞—Ç—å —á—Ç–æ-—Ç–æ –≤ –Ω–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π —Ñ–∞–π–ª, —Ç–æ —Ñ–∞–π–ª
# –±—É–¥–µ—Ç —Å–æ–∑–¥–∞–Ω –∏ –≤ –Ω–µ–≥–æ –Ω–∞—á–Ω—ë—Ç—Å—è –∑–∞–ø–∏—Å—å.    
    
#colors = ['red', 'green', 'blue']
#data = open('file.txt', 'a') # –∑–¥–µ—Å—å —É–∫–∞–∑—ã–≤–∞–µ–º —Ä–µ–∂–∏–º, –≤ –∫–æ—Ç–æ—Ä–æ–º –±—É–¥–µ–º —Ä–∞–±–æ—Ç–∞—Ç—å
#data.writelines(colors) # —Ä–∞–∑–¥–µ–ª–∏—Ç–µ–ª–µ–π –Ω–µ –±—É–¥–µ—Ç
#data.close()

# 2. r ‚Äì –æ—Ç–∫—Ä—ã—Ç–∏–µ –¥–ª—è —á—Ç–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö.
# ‚óã –ü–æ–∑–≤–æ–ª—è–µ—Ç —á–∏—Ç–∞—Ç—å –¥–∞–Ω–Ω—ã–µ –∏–∑ —Ñ–∞–π–ª–∞.
# ‚óã –ï—Å–ª–∏ –≤—ã –ø–æ–ø—Ä–æ–±—É–µ—Ç–µ —Å—á–∏—Ç–∞—Ç—å –¥–∞–Ω–Ω—ã–µ –∏–∑ —Ñ–∞–π–ª–∞, –∫–æ—Ç–æ—Ä–æ–≥–æ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç,
# –ø—Ä–æ–≥—Ä–∞–º–º–∞ –≤—ã–¥–∞—Å—Ç –æ—à–∏–±–∫—É.

# with open('file.txt', 'w') as data:
# data.write('line 1\n')
# data.write('line 2\n')



# 3. w ‚Äì –æ—Ç–∫—Ä—ã—Ç–∏–µ –¥–ª—è –∑–∞–ø–∏—Å–∏ –¥–∞–Ω–Ω—ã—Ö.
# ‚óã –ü–æ–∑–≤–æ–ª—è–µ—Ç –∑–∞–ø–∏—Å—ã–≤–∞—Ç—å –¥–∞–Ω–Ω—ã–µ –∏ —Å–æ–∑–¥–∞–≤–∞—Ç—å —Ñ–∞–π–ª, –µ—Å–ª–∏ –µ–≥–æ –Ω–µ
# —Å—É—â–µ—Å—Ç–≤—É–µ—Ç.

# colors = ['red', 'green', 'blue']
# data = open('file.txt', 'w')
# data.writelines(colors) # —Ä–∞–∑–¥–µ–ª–∏—Ç–µ–ª–µ–π –Ω–µ –±—É–¥–µ—Ç
# data.close()

# –ú–∏–∫—Å–æ–≤–∞–Ω–Ω—ã–µ —Ä–µ–∂–∏–º—ã:
# 4. w+
# ‚óã –ü–æ–∑–≤–æ–ª—è–µ—Ç –æ—Ç–∫—Ä—ã–≤–∞—Ç—å —Ñ–∞–π–ª –¥–ª—è –∑–∞–ø–∏—Å–∏ –∏ —á–∏—Ç–∞—Ç—å –∏–∑ –Ω–µ–≥–æ.
# ‚óã –ï—Å–ª–∏ —Ñ–∞–π–ª–∞ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, –æ–Ω –±—É–¥–µ—Ç —Å–æ–∑–¥–∞–Ω.

# 5. r+
# ‚óã –ü–æ–∑–≤–æ–ª—è–µ—Ç –æ—Ç–∫—Ä—ã–≤–∞—Ç—å —Ñ–∞–π–ª –¥–ª—è —á—Ç–µ–Ω–∏—è –∏ –¥–æ–ø–∏—Å—ã–≤–∞—Ç—å –≤ –Ω–µ–≥–æ.
# ‚óã –ï—Å–ª–∏ —Ñ–∞–π–ª–∞ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, –ø—Ä–æ–≥—Ä–∞–º–º–∞ –≤—ã–¥–∞—Å—Ç –æ—à–∏–±–∫—É.


# –ü—Ä–∏–º–µ—Ä—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —Ä–∞–∑–ª–∏—á–Ω—ã—Ö —Ä–µ–∂–∏–º–æ–≤ –≤ –∫–æ–¥–µ:

# 1. –†–µ–∂–∏–º a
# colors = ['red', 'green', 'blue']
# data = open('file.txt', 'a') # –∑–¥–µ—Å—å —É–∫–∞–∑—ã–≤–∞–µ–º —Ä–µ–∂–∏–º, –≤ –∫–æ—Ç–æ—Ä–æ–º –±—É–¥–µ–º —Ä–∞–±–æ—Ç–∞—Ç—å
# data.writelines(colors) # —Ä–∞–∑–¥–µ–ª–∏—Ç–µ–ª–µ–π –Ω–µ –±—É–¥–µ—Ç
# data.close()

# ‚óè data.close() ‚Äî –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è –∑–∞–∫—Ä—ã—Ç–∏—è —Ñ–∞–π–ª–∞, —á—Ç–æ–±—ã —Ä–∞–∑–æ—Ä–≤–∞—Ç—å
# –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —Ñ–∞–π–ª–æ–≤–æ–π –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π —Å —Ñ–∞–π–ª–æ–º –Ω–∞ –¥–∏—Å–∫–µ.
# ‚óè exit() ‚Äî –ø–æ–∑–≤–æ–ª—è–µ—Ç –Ω–µ –≤—ã–ø–æ–ª–Ω—è—Ç—å –∫–æ–¥, –ø—Ä–æ–ø–∏—Å–∞–Ω–Ω—ã–π –ø–æ—Å–ª–µ —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã –≤
# —Å–∫—Ä–∏–ø—Ç–µ.
# ‚óè –í –∏—Ç–æ–≥–µ —Å–æ–∑–¥–∞—ë—Ç—Å—è —Ç–µ–∫—Å—Ç–æ–≤—ã–π —Ñ–∞–π–ª —Å —Ç–µ–∫—Å—Ç–æ–º –≤–Ω—É—Ç—Ä–∏: redbluedreen.
# ‚óè –ü—Ä–∏ –ø–æ–≤—Ç–æ—Ä–Ω–æ–º –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ —Å–∫—Ä–∏–ø—Ç–∞ redbluedreenredbluedreen ‚Äî –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ
# –≤ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π —Ñ–∞–π–ª, –∞ –Ω–µ –ø–µ—Ä–µ–∑–∞–ø–∏—Å—å —Ñ–∞–π–ª–æ–≤.

# –ï—â—ë –æ–¥–∏–Ω —Å–ø–æ—Å–æ–± –∑–∞–ø–∏—Å–∏ –¥–∞–Ω–Ω—ã—Ö –≤ —Ñ–∞–π–ª:

# with open('file.txt', 'w') as data:
# data.write('line 1\n')
# data.write('line 2\n')

# 2. –†–µ–∂–∏–º r

# ‚óè –ß—Ç–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –∏–∑ —Ñ–∞–π–ª–∞:
# path = 'file.txt'
# data = open(path, 'r')
# for line in data:
# print(line)
# data.close()


# 3. –†–µ–∂–∏–º w

# colors = ['red', 'green', 'blue']
# data = open('file.txt', 'w')
# data.writelines(colors) # —Ä–∞–∑–¥–µ–ª–∏—Ç–µ–ª–µ–π –Ω–µ –±—É–¥–µ—Ç
# data.close()

# ‚óè –í –∏—Ç–æ–≥–µ —Å–æ–∑–¥–∞—ë—Ç—Å—è —Ç–µ–∫—Å—Ç–æ–≤—ã–π —Ñ–∞–π–ª —Å —Ç–µ–∫—Å—Ç–æ–º –≤–Ω—É—Ç—Ä–∏: ‚Äòredbluedreen‚Äô.
# ‚óè –í —Å–ª—É—á–∞–µ –ø–µ—Ä–µ–∑–∞–ø–∏—Å–∏ –Ω–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –∑–∞–ø–∏—Å—ã–≤–∞—é—Ç—Å—è, –∞ —Å—Ç–∞—Ä—ã–µ —É–¥–∞–ª—è—é—Ç—Å—è.

# –ú–æ–¥—É–ª—å os
# –ú–æ–¥—É–ª—å os –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç –º–Ω–æ–∂–µ—Å—Ç–≤–æ —Ñ—É–Ω–∫—Ü–∏–π –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –æ–ø–µ—Ä–∞—Ü–∏–æ–Ω–Ω–æ–π
# —Å–∏—Å—Ç–µ–º–æ–π, –ø—Ä–∏—á–µ–º –∏—Ö –ø–æ–≤–µ–¥–µ–Ω–∏–µ, –∫–∞–∫ –ø—Ä–∞–≤–∏–ª–æ, –Ω–µ –∑–∞–≤–∏—Å–∏—Ç –æ—Ç –û–°, –ø–æ—ç—Ç–æ–º—É –ø—Ä–æ–≥—Ä–∞–º–º—ã
# –æ—Å—Ç–∞—é—Ç—Å—è –ø–µ—Ä–µ–Ω–æ—Å–∏–º—ã–º–∏.

# –î–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç–∞—Ç—å —Å –¥–∞–Ω–Ω—ã–º –º–æ–¥—É–ª–µ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –µ–≥–æ –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å
# –≤ —Å–≤–æ—é –ø—Ä–æ–≥—Ä–∞–º–º—É:

# import os

# –ü–æ–∑–Ω–∞–∫–æ–º–∏–º—Å—è —Å –±–∞–∑–æ–≤—ã–º–∏ —Ñ—É–Ω–∫—Ü–∏—è–º–∏ –¥–∞–Ω–Ω–æ–≥–æ –º–æ–¥—É–ª—è:

# ‚óè os.chdir(path) - —Å–º–µ–Ω–∞ —Ç–µ–∫—É—â–µ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏.

# import os
# os.chdir('C:/Users/79190/PycharmProjects/GB')

# ‚óè os.getcwd() - —Ç–µ–∫—É—â–∞—è —Ä–∞–±–æ—á–∞—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è
# import os
# print(os.getcwd()) # 'C:\Users\79190\PycharmProjects\webproject'


# os.path - —è–≤–ª—è–µ—Ç—Å—è –≤–ª–æ–∂–µ–Ω–Ω—ã–º –º–æ–¥—É–ª–µ–º –≤ –º–æ–¥—É–ª—å os –∏ —Ä–µ–∞–ª–∏–∑—É–µ—Ç –Ω–µ–∫–æ—Ç–æ—Ä—ã–µ
# –ø–æ–ª–µ–∑–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –ø—É—Ç—è–º–∏, —Ç–∞–∫–∏–µ –∫–∞–∫:

# ‚óã os.path.basename(path) - –±–∞–∑–æ–≤–æ–µ –∏–º—è –ø—É—Ç–∏


# import os
# print(os.path.basename('C:/Users/79190/PycharmProjects/webproject/main.py')) #
# 'main.py'

# ‚óè os.path.abspath(path) - –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –Ω–æ—Ä–º–∞–ª–∏–∑–æ–≤–∞–Ω–Ω—ã–π –∞–±—Å–æ–ª—é—Ç–Ω—ã–π –ø—É—Ç—å.

# import os
# print(os.path.abspath('main.py'))
# # 'C:/Users/79190/PycharmProjects/webproject/main.py'

# –≠—Ç–æ –ª–∏—à—å –º–∞–ª–∞—è —á–∞—Å—Ç—å –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–µ–π –º–æ–¥—É–ª—è os.

# –ú–æ–¥—É–ª—å shutil

# –ú–æ–¥—É–ª—å shutil —Å–æ–¥–µ—Ä–∂–∏—Ç –Ω–∞–±–æ—Ä —Ñ—É–Ω–∫—Ü–∏–π –≤—ã—Å–æ–∫–æ–≥–æ —É—Ä–æ–≤–Ω—è –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Ñ–∞–π–ª–æ–≤,
# –≥—Ä—É–ø–ø —Ñ–∞–π–ª–æ–≤, –∏ –ø–∞–ø–æ–∫. –í —á–∞—Å—Ç–Ω–æ—Å—Ç–∏, –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∑–¥–µ—Å—å —Ñ—É–Ω–∫—Ü–∏–∏ –ø–æ–∑–≤–æ–ª—è—é—Ç
# –∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å, –ø–µ—Ä–µ–º–µ—â–∞—Ç—å –∏ —É–¥–∞–ª—è—Ç—å —Ñ–∞–π–ª—ã –∏ –ø–∞–ø–∫–∏. –ß–∞—Å—Ç–æ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –≤–º–µ—Å—Ç–µ —Å
# –º–æ–¥—É–ª–µ–º os.

# –î–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç–∞—Ç—å —Å –¥–∞–Ω–Ω—ã–º –º–æ–¥—É–ª–µ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –µ–≥–æ –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å
# –≤ —Å–≤–æ—é –ø—Ä–æ–≥—Ä–∞–º–º—É:

# import shutil

# –ü–æ–∑–Ω–∞–∫–æ–º–∏–º—Å—è —Å –±–∞–∑–æ–≤—ã–º–∏ —Ñ—É–Ω–∫—Ü–∏—è–º–∏ –¥–∞–Ω–Ω–æ–≥–æ –º–æ–¥—É–ª—è:

# ‚óè shutil.copyfile(src, dst) - –∫–æ–ø–∏—Ä—É–µ—Ç —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ (–Ω–æ –Ω–µ –º–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ) —Ñ–∞–π–ª–∞ src –≤
# —Ñ–∞–π–ª dst.

# ‚óè shutil.copy(src, dst) - –∫–æ–ø–∏—Ä—É–µ—Ç —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ —Ñ–∞–π–ª–∞ src –≤ —Ñ–∞–π–ª –∏–ª–∏ –ø–∞–ø–∫—É dst.

# ‚óè shutil.rmtree(path) - –£–¥–∞–ª—è–µ—Ç —Ç–µ–∫—É—â—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –∏ –≤—Å–µ –ø–æ–¥–¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏; path
# –¥–æ–ª–∂–µ–Ω —É–∫–∞–∑—ã–≤–∞—Ç—å –Ω–∞ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é, –∞ –Ω–µ –Ω–∞ —Å–∏–º–≤–æ–ª–∏—á–µ—Å–∫—É—é —Å—Å—ã–ª–∫—É